#!/usr/bin/perl

require "./stats/tag2date.pm";

sub num {
    my ($t)=@_;
    if($t =~ /^curl-(\d)_(\d+)_(\d+)/) {
        return 10000*$1 + 100*$2 + $3;
    }
    elsif($t =~ /^curl-(\d)_(\d+)/) {
        return 10000*$1 + 100*$2;
    }
}


sub sortthem {
    return num($a) <=> num($b);
}

@alltags= `git tag -l`;

foreach my $t (@alltags) {
    chomp $t;
    if($t =~ /^curl-([0-9_]*[0-9])\z/) {
        push @releases, $t;
    }
}

sub comments {
    my ($tag, $path) = @_;

    # Get source files to count
    my @files;
    open(G, "git ls-tree -r --name-only $tag -- $path 2>/dev/null|");
    while(<G>) {
        chomp;
        if($_ =~ /[ch]\z/) {
            push @files, $_;
        }
    }
    close(G);

    my $cmd;
    for(@files) {
        $cmd .= "$tag:$_ ";
    }

    my $blanks, $comments, $code;
    open(G, "git show $cmd 2>/dev/null| cloc --force-lang=C --csv -|");
    while(<G>) {
        if($_ =~ /^1,SUM,(\d*),(\d*),(\d*)/) {
            ($blanks, $comments, $code)=($1, $2, $3);
            last;
        }
    }
    close(G);

    return ($blanks, $comments, $code);
}

print <<CACHE
1996-11-11:160
1997-06-01:193
1997-08-27;739
1998-03-14:1611
1998-03-18;2200
1998-09-20;3379
1999-05-22;12289
1999-09-13;14060
1999-11-23;14826
2000-03-14;15254;11840
2000-03-21;15218;11787
2000-03-21;15283;11787
2000-08-21;17062;12967
2000-08-30;17188;13029
2000-09-28;18862;14608
2000-10-16;19491;14892
2000-12-04;19833;15037
2001-01-05;19046;14245
2001-01-27;17671;14419
2001-02-13;18106;14848
2001-03-22;19294;16162
2001-04-04;19359;16227
2001-04-23;19476;16339
2001-05-07;19641;16503
2001-06-07;20012;16855
2001-08-20;19967;16640
2001-09-25;21407;17982
2001-11-04;22518;18828
2001-12-05;23291;19559
2002-01-23;24649;20833
2002-02-05;24689;20873
2002-03-07;25300;21431
2002-04-15;26203;21655
2002-05-13;26672;21990
2002-06-13;27090;22326
2002-10-01;28352;23347
2002-10-11;28425;23420
2002-11-18;28582;23516
2003-01-14;28975;23785
2003-04-02;27144;21928
2003-05-19;27661;22404
2003-07-28;29937;24307
2003-08-15;30739;25052
2003-11-01;31753;25656
2004-01-22;32731;26285
2004-03-18;34697;27779
2004-04-26;35548;28582
2004-06-02;37923;30913
2004-08-10;37778;31015
2004-10-18;38563;31764
2004-12-20;40003;32856
2005-02-01;40307;33100
2005-03-04;41515;34301
2005-04-05;41486;34256
2005-05-16;42626;35160
2005-09-01;43189;35656
2005-10-13;43996;36434
2005-12-06;44376;36736
2006-02-27;44860;37160
2006-03-20;44894;37179
2006-06-12;47617;39716
2006-08-07;48279;40389
2006-10-29;49553;41560
2007-01-29;51574;43325
2007-04-11;53705;45147
2007-06-25;54903;46285
2007-07-10;55460;46799
2007-09-13;56715;47986
2007-10-29;57861;49077
2008-01-28;58843;49757
2008-03-30;59542;49944
2008-06-04;60594;50931
2008-09-01;61771;51818
2008-11-05;62966;52927
2008-11-13;62880;52841
2009-01-19;63136;53060
2009-03-02;65149;54952
2009-05-18;65480;55239
2009-08-12;66695;56216
2009-11-04;67451;56867
2010-02-09;72328;61429
2010-04-14;72884;61961
2010-06-16;77021;65859
2010-08-11;77707;66476
2010-10-12;78306;67020
2010-12-15;79143;67727
2011-02-17;80451;68966
2011-04-17;81599;70032
2011-04-22;81764;70179
2011-06-23;81937;70305
2011-09-13;82645;71251
2011-11-14;85474;71760
2011-11-17;85472;71760
2012-01-24;86452;72718
2012-03-22;87064;72867
2012-05-24;87033;73339
2012-07-27;91801;77109
2012-10-10;92683;77850
2012-11-20;93147;78191
2013-02-06;93707;78665
2013-04-12;95390;80339
2013-06-22;96522;81365
2013-08-11;99276;83949
2013-10-13;100040;84578
2013-12-16;100846;85311
2014-01-29;101253;85719
2014-03-26;102809;87075
2014-05-20;103642;87841
2014-07-16;104218;88340
2014-09-10;105807;89920
2014-11-05;105659;89692
2015-01-07;108540;92538
2015-02-25;107511;91495
2015-04-22;107691;91624
2015-04-28;107696;91624
2015-06-17;108396;92273
2015-08-11;108856;92700
2015-10-07;109024;92766
2015-12-01;110171;93760
2016-01-27;110523;93987
2016-02-08;110762;93979
2016-03-23;111005;94204
2016-05-17;112837;96012
2016-05-30;112994;96169
2016-07-21;113325;96478
2016-08-03;113348;96492
2016-09-07;113810;96946
2016-09-14;113839;96963
2016-11-02;113787;96899
2016-12-20;115554;98341
2016-12-22;115554;98341
2017-02-22;115957;98675
2017-02-24;115981;98687
2017-04-19;116823;99030
2017-06-14;117194;99333
2017-08-09;117242;99408
2017-08-13;117352;99493
2017-10-04;119702;101420
2017-10-23;120139;101756
2017-11-29;121174;102764
2018-01-23;124055;105536
2018-03-13;124771;106085
2018-05-15;125847;107111
2018-07-11;126464;107589
2018-09-04;126748;107820
2018-10-30;129613;110486
2018-12-12;129334;110104
2019-02-06;129425;110118
2019-03-27;130472;110998
2019-05-22;130109;110623
2019-06-04;130236;110695
2019-07-17;130267;110676
2019-07-19;130258;110667
2019-09-10;133886;113612
2019-11-05;134256;113854
2020-01-08;135692;115059
2020-03-04;136921;116311
2020-03-11;137160;116551
2020-04-29;138596;117684
2020-06-23;139967;118926
2020-06-30;139990;118949
2020-08-19;140398;119320
2020-10-14;140783;119207
2020-12-09;141400;119761
2021-02-03;143815;122096
2021-03-31;144580;122955
2021-04-14;144616;122983
2021-05-26;145421;123691
2021-07-21;144698;124061
2021-09-14;145075;124373
2021-09-22;145092;124390
2021-11-10;145840;125031
2022-01-05;146587;125694
2022-03-05;143951;123285
2022-04-27;145517;124654
2022-05-11;145651;124780
2022-06-27;147443;126303
2022-08-31;148113;126898
2022-10-26;149508;128145
2022-12-21;151435;130002
2023-02-15;155590;134014
2023-02-20;155652;134073
CACHE
    ;

sub show {
    my ($t, $d) = @_;
    my ($blanks, $comments, $code) = comments($t, "src lib include");
    my ($lblanks, $lcomments, $lcode) = comments($t, "lib");
    printf "$d;%u;%u\n", $comments +$code, $lcomments + $lcode;

}

foreach my $t (sort sortthem @releases) {
    if(num($t) < 80000) {
        next;
    }
    my $d = tag2date($t);
    show($t, $d);
}

$t=`git describe`;
chomp $t;

my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) =
    localtime(time);
my $d = sprintf "%04d-%02d-%02d", $year + 1900, $mon + 1, $mday;

show($t, $d);
